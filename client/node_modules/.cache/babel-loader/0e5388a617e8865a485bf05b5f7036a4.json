{"ast":null,"code":"var _jsxFileName = \"/Users/megurock/Sites/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your cart is empty.\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/megurock/Sites/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CustomButton","CartItem","selectCartItems","toggleCartHidden","createStructuredSelector","withRouter","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,GAKA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,CADF,EAWE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAC3BJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CADF;;AAoBA,MAAMY,eAAe,GAAGX,wBAAwB,CAAC;AAC/CG,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAIA,eAAeG,UAAU,CAACN,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport CustomButton from '../custom-button/custom-button.component'\nimport CartItem from '../cart-item/cart-item.component'\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\nimport { createStructuredSelector } from 'reselect'\nimport { withRouter } from 'react-router-dom'\nimport './cart-dropdown.styles.scss'\n\nconst CartDropdown = ({cartItems, history, dispatch}) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {\n      cartItems.length ?\n      cartItems.map(cartItem => \n        <CartItem key={cartItem.id} item={cartItem} />\n      )\n      :\n      <span className='empty-message'>Your cart is empty.</span>\n      }\n    </div>\n    <CustomButton onClick={() => {\n      history.push('/checkout')\n      dispatch(toggleCartHidden())\n    }}>GO TO CHECKOUT\n    </CustomButton>\n  </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n})\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown))\n"]},"metadata":{},"sourceType":"module"}