{"ast":null,"code":"import _objectSpread from \"/Users/eijimeguro/Sites/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/eijimeguro/Sites/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eijimeguro/Sites/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    emial: '',\n    passwor: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/eijimeguro/Sites/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","emial","passwor","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from '../../redux/user/user.actions'\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles'\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [ userCredentials, setCredentials ] = useState({ emial: '', passwor: '' })\n  const { email, password } = userCredentials\n\n  const handleSubmit = async event => {\n    event.preventDefault()  \n    emailSignInStart(email, password)\n  }\n\n  const handleChange = event => {\n    const { value, name } = event.target\n    setCredentials({ ...userCredentials, [name]: value })\n  }\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          handleChange={handleChange}\n          value={email}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          handleChange={handleChange}\n          label='password'\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type='submit'> Sign in </CustomButton>\n          <CustomButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  )\n  \n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn)"]},"metadata":{},"sourceType":"module"}