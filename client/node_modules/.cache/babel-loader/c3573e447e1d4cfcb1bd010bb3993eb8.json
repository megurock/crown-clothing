{"ast":null,"code":"import _objectSpread from \"/Users/eijimeguro/Sites/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase-utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref2 = yield auth.signInWithPopup(googleProvider),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/eijimeguro/Sites/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAWC,aAAX,EAA0BC,aAA1B,QAA+C,gBAA/C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AAAA,iBACe,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CADrB;AAAA,UACMK,IADN,QACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACI,aAAa;AAAGY,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,kBACe,MAAMb,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CADrB;AAAA,UACMK,IADN,SACMA,IADN;;AAEF,UAAMH,uBAAuB,CAACG,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUE,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAChE,MAAI;AAAA,kBACe,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMX,IADN,SACMA,IADN;;AAEF,UAAMH,uBAAuB,CAACG,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport UserActionTypes from './user.types'\nimport {   signInSuccess, signInFailure } from './user.actions'\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase-utils'\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    yield getSnapshotFromUserAuth(user)\n  } catch (error) {\n    yield put(signInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}