{"ast":null,"code":"import _defineProperty from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from'../../redux/user/user.actions';import{SignInContainer,SignInTitle,ButtonsBarContainer}from'./sign-in.styles';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}});};var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return React.createElement(SignInContainer,null,React.createElement(SignInTitle,null,\"I already have an account\"),React.createElement(\"span\",null,\"Sign in with your email and password\"),React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(FormInput,{name:\"email\",type:\"email\",handleChange:handleChange,value:email,label:\"email\",required:true}),React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"password\",required:true}),React.createElement(ButtonsBarContainer,null,React.createElement(CustomButton,{type:\"submit\"},\"Sign in\"),React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign in with Google\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/megurock/Sites/crown-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"goBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,OACEC,iBAAiB,GAAjBA,CAAAA,kBADF,CAEEC,gBAAgB,GAAhBA,CAAAA,iBAFF,KAGO,+BAHP,CAKA,OACEC,eADF,CAEEC,WAFF,CAGEC,mBAHF,KAIO,kBAJP,CAMA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CJ,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eACdJ,QAAQ,CAAC,CAAEU,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CADM,wCAClDC,eADkD,eACjCC,cADiC,kBAElDH,CAAAA,KAFkD,CAE9BE,eAF8B,CAElDF,KAFkD,CAE3CC,QAF2C,CAE9BC,eAF8B,CAE3CD,QAF2C,CAI1D,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAMC,KAAN,wHACnBA,KAAK,CAACC,cAAN,GACAX,gBAAgB,CAACK,KAAD,CAAQC,QAAR,CAAhB,CAFmB,8CAArB,CAKA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,mBACJA,KAAK,CAACG,MADF,CACpBC,KADoB,eACpBA,KADoB,CACbC,IADa,eACbA,IADa,CAE5BP,cAAc,kBAAMD,eAAN,oBAAwBQ,IAAxB,CAA+BD,KAA/B,GAAd,CACD,CAHD,CAKA,MACE,qBAAC,eAAD,MACE,oBAAC,WAAD,kCADF,CAEE,uEAFF,CAIE,4BAAM,QAAQ,CAAEL,YAAhB,EACE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,YAAY,CAAEG,YAHhB,CAIE,KAAK,CAAEP,KAJT,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EADF,CASE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEC,QAHT,CAIE,YAAY,CAAEM,YAJhB,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EATF,CAiBE,oBAAC,mBAAD,MACE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YADF,CAEE,oBAAC,YAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAEb,iBAFX,CAGE,cAAc,KAHhB,wBAFF,CAjBF,CAJF,CADF,CAoCD,CAlDD,CAoDA,GAAMiB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtClB,iBAAiB,CAAE,mCAAMkB,CAAAA,QAAQ,CAAClB,kBAAiB,EAAlB,CAAd,EADmB,CAEtCC,gBAAgB,CAAE,0BAACK,KAAD,CAAQC,QAAR,QAChBW,CAAAA,QAAQ,CAACjB,iBAAgB,CAAC,CAAEK,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CADQ,EAFoB,CAAL,EAAnC,CAMA,cAAeV,CAAAA,OAAO,CACpB,IADoB,CAEpBoB,kBAFoB,CAAP,CAGbZ,MAHa,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from '../../redux/user/user.actions'\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles'\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [ userCredentials, setCredentials ] = useState({ email: '', password: '' })\n  const { email, password } = userCredentials\n\n  const handleSubmit = async event => {\n    event.preventDefault()  \n    emailSignInStart(email, password)\n  }\n\n  const handleChange = event => {\n    const { value, name } = event.target\n    setCredentials({ ...userCredentials, [name]: value })\n  }\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          handleChange={handleChange}\n          value={email}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          handleChange={handleChange}\n          label='password'\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type='submit'>Sign in</CustomButton>\n          <CustomButton\n            type='button'\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  )\n  \n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn)"]},"metadata":{},"sourceType":"module"}