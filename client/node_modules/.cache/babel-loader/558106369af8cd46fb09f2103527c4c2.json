{"ast":null,"code":"import _defineProperty from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/megurock/Sites/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{signUpStart as _signUpStart}from'../../redux/user/user.actions';import'./sign-up.styles.scss';var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"password don't match\");return _context.abrupt(\"return\");case 4:signUpStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}});};var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return React.createElement(\"div\",{className:\"sign-up\"},React.createElement(\"h2\",{className:\"title\"},\"I do not have an account\"),React.createElement(\"span\",null,\"Sign up with your email and password\"),React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",required:true}),React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),React.createElement(CustomButton,{type:\"submit\"},\"Sign up\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/megurock/Sites/crown-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { signUpStart } from '../../redux/user/user.actions'\nimport './sign-up.styles.scss'\n\nconst SignUp = ({ signUpStart }) => {\n  const [ userCredentials, setUserCredentials ] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  })\n  const { displayName, email, password, confirmPassword } = userCredentials\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    if (password !== confirmPassword) {\n      alert(\"password don't match\")\n      return\n    }\n    signUpStart({ displayName, email, password })\n  }\n\n  const handleChange = event => {\n    const { name, value } = event.target\n    setUserCredentials({ ...userCredentials, [name]: value })\n  }\n\n  return(\n    <div className='sign-up'>\n      <h2 className='title'>I do not have an account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={handleSubmit}>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={displayName}\n          onChange={handleChange}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n          label='Password'\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={handleChange}\n          label='Confirm Password'\n          required\n        />\n        <CustomButton type='submit'>Sign up</CustomButton>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)\n"]},"metadata":{},"sourceType":"module"}